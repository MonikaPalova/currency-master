openapi: 3.0.0
title: "Currency Master APIs"
description: "This API includes all requests related to currency master"
version: "1.0.0"
servers:
- url: http://localhost:7777/api/v1
  description: Local server
tags:
- name: "Authentication"
- name: "Users"
- name: "User Assets"
- name: "Assets"
- name: "Acquisitions"
paths:
  /login:
    post:
      tags:
      - "Authentication"
      summary: "Create a new session and set cookie for user"
      responses:
        "200":
          description: "Session was created and cookie is set"
          headers: 
            Set-Cookie:
              schema: 
                type: "string"
                example: 'CURRENCY-MASTER-SESSION-ID=431dsa77-e4bb-4360-9335-a523a6de06d6;Expires=Thu, 17 Feb 2022 02:49:28 GMT'
        "401":
          description: "Incorrect credentials"
        "500":
          description: "Internal server error occured"
      security:
        - basicAuth: []
  /logout:
    post:
      tags:
      - "Authentication"
      summary: "Deletes the session of the user"
      responses:
        "200":
          description: "Session was deleted successfully"
          headers: 
            Set-Cookie:
              schema: 
                type: "string"
                example: ''
        "401":
          description: "This request requires authentication"
        "500":
          description: "Internal server error occured"
      security:
        - cookieAuth: []
  /users:
    get:
      tags:
      - "Users"
      summary: "Get users"
      responses:
        "200":
          description: "List of all users"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/User"
    post:
      tags:
      - "Users"
      summary: "Create user"
      requestBody:
        description: "User to create"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserToCreate"
      responses:
        "200":
          description: "Created user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "User parameters are missing or incorrect"
        "409":
          description: "User with username already exists"
        "500":
          description: "Internal server error occured"
  /users/{username}:
    get:
      tags:
      - "Users"
      summary: "Get user by username"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user to get"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returned user"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "User is not found"
        "500":
          description: "Internal server error occured"
  /users/{username}/assets:
    get:
      tags:
      - "User Assets"
      summary: "Get assets owned by user"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user assets to get"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returned user assets"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAsset"
  /users/{username}/assets/{id}:
    get:
      tags:
      - "User Assets"
      summary: "Get asset with id owned by user"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user assets to get"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        description: "Id of asset to get"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returned user asset"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAsset"
        "404":
          description: "User is not found or user has no such asset"
        "500":
          description: "Internal server error occured"
  /users/{username}/assets/{id}/buy:
    post:
      tags:
      - "User Assets"
      summary: "Buy asset with id for user"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        description: "Id of asset to buy"
        required: true
        schema:
          type: "string"
      - in: query
        name: quantity
        schema:
          type: number
        required: true
        description: The quantity to buy
      responses:
        "200":
          description: "User asset after the operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Acquisition"
        "401":
          description: "This request requires authentication"
        "403":
          description: "Not allowed to buy assets for another user"
        "404":
          description: "User is not found or asset with this id doesn't exist"
        "409":
          description: "Not enough money"
        "500":
          description: "Internal server error occured"
      security:
        - cookieAuth: []
  /users/{username}/assets/{id}/sell:
    post:
      tags:
      - "User Assets"
      summary: "Sell asset with id for user"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of user"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        description: "Id of asset to sell"
        required: true
        schema:
          type: "string"
      - in: query
        name: quantity
        schema:
          type: number
        required: true
        description: The quantity to sell
      responses:
        "200":
          description: "User asset after the operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetOperationResponse"
        "401":
          description: "This request requires authentication"
        "403":
          description: "Not allowed to sell another user's assets"
        "404":
          description: "User is not found or user doesn't have asset with this id"
        "409":
          description: "Not enough quantity to sell"
        "410":
          description: "User has quantity of the asset but the asset is discontinued and cannot be sold"
        "500":
          description: "Internal server error occured"
      security:
        - cookieAuth: []
  /assets:
    get:
      tags:
      - "Assets"
      summary: "Get assets "
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        required: false
        description: The page number
      - in: query
        name: size
        schema:
          type: integer
          default: 10
        required: false
        description: The numbers of assets on page
      responses:
        "200":
          description: "Returned assets"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssetPage"
        "400":
          description: "Page or size are set but are not positive integers"
        "500":
          description: "Internal server error occured"
  /assets/{id}:
    get:
      tags:
      - "Assets"
      summary: "Get asset with id from external api"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of asset to get"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returned asset"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
        "404":
          description: "Asset is not found"
        "500":
          description: "Internal server error occured"
  /acquisitions:
    get:
      tags:
      - "Acquisitions"
      summary: "Get acquisitions"
      parameters:
      - in: query
        name: username
        schema:
          type: string
        required: false
        description: Filter by username
      responses:
        "200":
          description: "List of all acquisitions"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/Acquisition"
        "500":
          description: "Internal server error occured"
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: header
      name: Set-Cookie
    basicAuth:
      type: http
      scheme: basic
  schemas:
    User:
      type: "object"
      properties:
        username:
          type: string
        email:
          type: string
        usd:
          type: number
        assets:
          type: array
          items: 
            $ref: "#/components/schemas/UserAsset"
        valuation:
          type: number
    UserAsset:
      type: object
      properties:
        username:
          type: string
        assetId:
          type: string
        name:
          type: string
        quantity:
          type: number
        valuation:
          type: number
    UserToCreate:
      type: "object"
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    Asset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isCrypto:
          type: boolean
        priceUSD:
          type: number
      example:
        id: "BTC"
        name: "Bitcoin"
        isCrypto: true
        priceUSD: 10342.23
    AssetPage:
      type: object
      properties:
        assets:
          type: array
          items: 
            $ref: "#/components/schemas/Asset"
        page:
          type: number
        size:
          type: number
        totalResults:
          type: number
      example:
        assets:
        - id: "BTC"
          name: "Bitcoin"
          isCrypto: true
          priceUSD: 10342.23
        page: 1
        size: 1
        totalResults: 3200
    AssetOperationResponse:
      type: object
      properties:
        username:
          type: string
        assetId:
          type: string
        balance:
          type: number
        quantity:
          type: number
    Acquisition:
      type: object
      properties:
        username:
          type: string
        assetId:
          type: string
        priceUSD:
          type: number
        quantity:
          type: number
        totalUSD:
          type: number
        purchaseDate:
          type: string
          format: date-time
      example:
        username: "monika"
        assetId: "BTA"
        quantity: 3
        priceUSD: 0.0337376
        totalUSD: 0.10121287778019905
        purchaseDate: "2022-02-14T10:30:50Z"